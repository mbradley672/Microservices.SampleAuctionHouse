services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresqldata
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017    
    volumes:
      - mongodata:/var/lib/mongodb/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  auctionsvc:
      image: mbradley672/auction-service:latest
      build:
        context: .
        dockerfile: src/AuctionService/Dockerfile
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:80
        - RabbitMq__Host=rabbitmq
        - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=Auctions
        - IdentityService__Uri=http://identitysvc
      ports:
        - 7001:80
      depends_on: 
        - postgres
        - rabbitmq
  searchsvc:
    image: mbradley672/search-service:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - AuctionServiceUrl=http://auctionsvc
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb/?authMechanism=SCRAM-SHA-256
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
  identitysvc:
    image: mbradley672/identity-service:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=Identity
    ports:
      - 5000:80
    depends_on:
      - postgres
  gatewaysvc:
    image: mbradley672/gateway-service:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80

volumes:
  pgdata:    
  mongodata:
    